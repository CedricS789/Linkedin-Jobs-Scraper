{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "command": "python scraper_final.py"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        200,
        840
      ],
      "id": "c2068808-08ea-4a52-9eb0-04107d0fc469",
      "name": "Run Scraper Script"
    },
    {
      "parameters": {
        "fileSelector": "job_listing.csv",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        380,
        840
      ],
      "id": "dac0280a-5275-4f26-b463-b3ffecd6c93d",
      "name": "Load Job Listings CSV"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        560,
        840
      ],
      "id": "6bfa7b25-9109-47e5-9a51-44d5e49b1d3e",
      "name": "Parse CSV Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "84dc5909-4ddc-4ca2-bea4-b0431d982591",
              "name": "job_id",
              "value": "={{ $json.job_id }}",
              "type": "number"
            },
            {
              "id": "e8499e0b-c55b-4981-84b6-504086e1a8e6",
              "name": "job_match",
              "value": null,
              "type": "number"
            },
            {
              "id": "9eef09ea-75c6-45f4-ad29-66a173bc3b2a",
              "name": "loaded",
              "value": "no",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {
          "ignoreConversionErrors": false
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        840
      ],
      "id": "62fa10ed-5349-42bb-b1fd-9108296316ac",
      "name": "Transform Job Data"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "returnAll": true,
        "filterType": "manual",
        "options": {
          "sort": {
            "sortValue": [
              {
                "key": "Created time|created_time",
                "direction": "descending"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        480,
        0
      ],
      "id": "10e64e32-2954-48a2-8a3a-bc9b8bde3513",
      "name": "Notion: Fetch Existing Jobs",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "Z7nhkVEklA4UFa8g",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "fileSelector": "config.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        20,
        200
      ],
      "id": "e733f118-ecb1-41f9-acba-7aaa18e152f0",
      "name": "Load Config File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c4dcfb4e-89ab-472b-b16d-902d7c48fd8a",
              "name": "=data.NUM_JOBS_PER_QUERY",
              "value": "=200",
              "type": "number"
            },
            {
              "id": "f12dda85-b4c9-4d4f-b3aa-f652e8c00482",
              "name": "data.PAGE_DELAY",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "f35a1d22-3bf7-4165-9682-82973cc43eb0",
              "name": "data.RETRY_WAIT_NON_429",
              "value": "=10",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        20,
        620
      ],
      "id": "81694c7c-b773-425b-b4eb-75333472b734",
      "name": "Set Config Parameters"
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=echo '{ \"BASE_LIST_URL\": \"https://www.linkedin.com/jobs/search/\", \"BASE_JOB_URL\": \"https://www.linkedin.com/jobs-guest/jobs/api/jobPosting/{}\", \"NUM_JOBS_PER_QUERY\": {{ $json.data.NUM_JOBS_PER_QUERY }}, \"SEARCH_QUERIES\": [ { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[0].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[0].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[0].f_E }}\" }, { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[1].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[1].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[1].f_E }}\" }, { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[2].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[2].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[2].f_E }}\" } ], \"REQUEST_TIMEOUT\": {{ $json.data.REQUEST_TIMEOUT }}, \"PAGE_DELAY\": {{ $json.data.PAGE_DELAY }}, \"CSV_FILENAME\": \"{{ $json.data.CSV_FILENAME }}\", \"INITIAL_HEADERS_COUNT\": {{ $json.data.INITIAL_HEADERS_COUNT }}, \"RANDOM_HEADERS_COUNT\": {{ $json.data.RANDOM_HEADERS_COUNT }}, \"MAX_ATTEMPTS\": {{ $json.data.MAX_ATTEMPTS }}, \"RETRY_WAIT_429\": {{ $json.data.RETRY_WAIT_429 }}, \"RETRY_WAIT_NON_429\": {{ $json.data.RETRY_WAIT_NON_429 }}, \"OUTPUT_FIELDS\": [ \"{{ $json.data.OUTPUT_FIELDS[0] }}\", \"{{ $json.data.OUTPUT_FIELDS[1] }}\", \"{{ $json.data.OUTPUT_FIELDS[2] }}\", \"{{ $json.data.OUTPUT_FIELDS[3] }}\", \"{{ $json.data.OUTPUT_FIELDS[4] }}\", \"{{ $json.data.OUTPUT_FIELDS[5] }}\", \"{{ $json.data.OUTPUT_FIELDS[6] }}\", \"{{ $json.data.OUTPUT_FIELDS[7] }}\", \"{{ $json.data.OUTPUT_FIELDS[8] }}\" ] }' > config.json && cat config.json\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        20,
        840
      ],
      "id": "eda18675-7475-4fed-a5d6-e25c72e8c6c5",
      "name": "Generate Config File"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        20,
        420
      ],
      "id": "68504f60-406a-43c7-9f9d-754661984c33",
      "name": "Parse Config File"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 12
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "e18c3159-1acb-4b64-9b4d-c7ab608b1fe7",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        940,
        840
      ],
      "id": "fe11f0c4-805b-41fb-af43-533556f74ea5",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        1380,
        0
      ],
      "id": "88761ee0-b748-44b5-85cf-1638238dfce4",
      "name": "Remove Duplicates1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "deepseek-chat",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=Role:\nYou are a recruitment specialist matching candidate profiles with job postings.\n\nCandidate:\nFirst-year Master's student in Electronics and Telecommunications Engineering seeking an internship (no full/part-time jobs) in Belgium. Limited direct experience; has worked at McDonald's, FedEx, and tutors math/physics. Skills include basic electronics, circuit analysis, PCB design, VHDL, FPGAs, simulation tools; programming in Python, C, C++, MATLAB (Simulink); strong communication, teamwork, problem-solving, and time management. Languages: French (Native), English (Proficient), Dutch (Basic).\n\nInstructions:\nAnalyze the job posting details and generate a \"Job Match Percentage\" (0-100) reflecting the fit with this candidate. If \"N/A\" appears for experience, treat it as unknown. If any critical info is missing, return:\n{\n  \"job_match_percentage\": \"\",\n  \"explanation\": \"\"\n}\nOtherwise, return a JSON object with:\n- \"job_match_percentage\": integer (0-100)\n- \"explanation\": one-sentence explanation.\n\nJob Posting Input:\nCompany Name:         {{ $json.company_name }}\nJob Title:            {{ $json.job_title }}\nTime Posted:          {{ $json.time_posted }}\nNumber of Applicants: {{ $json.num_applicants }}\nJob Description:      {{ $json.description_content }}\nExperience Needed:    {{ $json.experience_needed }}\n\nExample Good Output:\n{\n  \"job_match_percentage\": 20,\n  \"explanation\": \"Job targets Management/Business, not matching candidate's technical focus; transferable skills add some value.\"\n}\n\nExample Bad Output:\nJob Match: 80\nThis role is perfect because it's in Belgium and the candidate has some work experience. The candidate should apply immediately.\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "maxTokens": 2040
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        300,
        1060
      ],
      "id": "aac4b26d-07ac-43b2-bf31-9e403646396f",
      "name": "OpenAI",
      "alwaysOutputData": false,
      "credentials": {
        "openAiApi": {
          "id": "Pp8ayoMT1CQr8vkn",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "=deepseek-chat",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=Hi"
            }
          ]
        },
        "options": {
          "maxTokens": 2048
        }
      },
      "id": "f0eddc67-2584-4044-8f4e-373720ba3747",
      "name": "Generate article with DeepSeek1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        40,
        1080
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "Pp8ayoMT1CQr8vkn",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            },
            {
              "field1": "property_time_posted",
              "field2": "time_posted"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        280,
        1220
      ],
      "id": "5f559af7-d65d-4972-9e90-d15a6597fd3c",
      "name": "Merge Job Data1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_id }}",
                    "rightValue": "={{ $json.property_job_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        600,
        1200
      ],
      "id": "ee454b47-3d9e-44f7-8ce3-0348149d3e31",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        860,
        1180
      ],
      "id": "720afee0-7c3d-4964-9b7b-3e9a1f720d03",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Job Id|number",
              "numberValue": "={{ $json.job_id }}"
            },
            {
              "key": "Job Link|url",
              "urlValue": "={{ $json.job_url }}"
            },
            {
              "key": "Company|rich_text",
              "textContent": "={{ $json.company_name }}"
            },
            {
              "key": "Job Title|title",
              "title": "={{ $json.job_title }}"
            },
            {
              "key": "Time Posted|rich_text",
              "textContent": "={{ $json.time_posted }}"
            },
            {
              "key": "Number Of Applicants|rich_text",
              "textContent": "={{ $json.num_applicants }}"
            },
            {
              "key": "Location|rich_text",
              "textContent": "={{ $json.job_location }}"
            },
            {
              "key": "=Experience Needed|rich_text",
              "textContent": "={{ $json.experience_needed }}"
            },
            {
              "key": "Job Description|rich_text",
              "textContent": "={{ $json.description_content.length > 1997 ? $json.description_content.substring(0, 1997) + '...' : $json.description_content }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1140,
        440
      ],
      "id": "82edd09a-1d86-438a-8883-db327093516f",
      "name": "Notion: Create Job Entry",
      "credentials": {
        "notionApi": {
          "id": "Z7nhkVEklA4UFa8g",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            },
            {
              "field1": "property_time_posted",
              "field2": "time_posted"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1440,
        820
      ],
      "id": "4351d9f2-a5ff-46c5-a8ff-7f394afa7fa8",
      "name": "Data To Update"
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        940,
        440
      ],
      "id": "895ef35e-782c-43ae-9f88-7f6dfed27933",
      "name": "Data To Create"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Time Posted|rich_text",
              "textContent": "={{ $('Data To Update').item.json.time_posted }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1860,
        820
      ],
      "id": "325931a9-1536-4be1-a986-f0235dfca37c",
      "name": "Notion1",
      "credentials": {
        "notionApi": {
          "id": "Z7nhkVEklA4UFa8g",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "returnAll": true,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Job Id|number",
              "condition": "equals",
              "numberValue": "={{ $json.job_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1640,
        820
      ],
      "id": "4e9ffe7c-d9f5-45ba-a76b-693f49653c2a",
      "name": "Notion",
      "credentials": {
        "notionApi": {
          "id": "Z7nhkVEklA4UFa8g",
          "name": "Notion account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Run Scraper Script": {
      "main": [
        [
          {
            "node": "Load Job Listings CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Job Listings CSV": {
      "main": [
        [
          {
            "node": "Parse CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse CSV Data": {
      "main": [
        [
          {
            "node": "Transform Job Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Job Data": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion: Fetch Existing Jobs": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Config File": {
      "main": [
        [
          {
            "node": "Parse Config File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Config Parameters": {
      "main": [
        [
          {
            "node": "Generate Config File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Config File": {
      "main": [
        [
          {
            "node": "Run Scraper Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Config File": {
      "main": [
        [
          {
            "node": "Set Config Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Load Config File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notion: Fetch Existing Jobs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Data To Update",
            "type": "main",
            "index": 1
          },
          {
            "node": "Data To Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "Data To Update",
            "type": "main",
            "index": 0
          },
          {
            "node": "Data To Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data To Update": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data To Create": {
      "main": [
        [
          {
            "node": "Notion: Create Job Entry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Notion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0d853812-fd00-427c-9bae-c534c6a6a3bf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d637e5764776828a38d3cd8fb01639bc63536c0e3d98ed216e17008df032fa03"
  },
  "id": "A9UzQJasJAXaLn8z",
  "tags": []
}