{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "command": "python scraper_final.py"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        500,
        740
      ],
      "id": "e5cb6a82-9994-4a7a-a840-e9bd602211c4",
      "name": "Run Scraper Script"
    },
    {
      "parameters": {
        "fileSelector": "job_listing.csv",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        680,
        740
      ],
      "id": "9697a9c6-edd1-49da-aeee-b95535c11e3e",
      "name": "Load Job Listings CSV"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        860,
        740
      ],
      "id": "66ec2d23-0747-4e89-b9d5-f980e8964456",
      "name": "Parse CSV Data"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "84dc5909-4ddc-4ca2-bea4-b0431d982591",
              "name": "job_id",
              "value": "={{ $json.job_id }}",
              "type": "number"
            },
            {
              "id": "e8499e0b-c55b-4981-84b6-504086e1a8e6",
              "name": "job_match",
              "value": null,
              "type": "number"
            },
            {
              "id": "9eef09ea-75c6-45f4-ad29-66a173bc3b2a",
              "name": "loaded",
              "value": "no",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {
          "ignoreConversionErrors": false
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        740
      ],
      "id": "b7ae5a95-ab25-4861-b2b4-8225d4e4a30a",
      "name": "Transform Job Data"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "returnAll": true,
        "filterType": "manual",
        "options": {
          "sort": {
            "sortValue": [
              {
                "key": "Created time|created_time",
                "direction": "descending"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        780,
        -100
      ],
      "id": "40dac092-648e-4feb-921d-02679c58ee83",
      "name": "Notion: Fetch Existing Jobs",
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "i2VF7jTgl2AkAKzI",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "fileSelector": "config.json",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        320,
        100
      ],
      "id": "8d9e8f74-e5c4-4da6-b99b-a9d374d4bbd6",
      "name": "Load Config File"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c4dcfb4e-89ab-472b-b16d-902d7c48fd8a",
              "name": "=data.NUM_JOBS_PER_QUERY",
              "value": "=50",
              "type": "number"
            },
            {
              "id": "f12dda85-b4c9-4d4f-b3aa-f652e8c00482",
              "name": "data.PAGE_DELAY",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "f35a1d22-3bf7-4165-9682-82973cc43eb0",
              "name": "data.RETRY_WAIT_NON_429",
              "value": "=10",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        320,
        520
      ],
      "id": "754abf3c-5754-4417-af59-306465b9d5aa",
      "name": "Set Config Parameters"
    },
    {
      "parameters": {
        "executeOnce": false,
        "command": "=echo '{ \"BASE_LIST_URL\": \"https://www.linkedin.com/jobs/search/\", \"BASE_JOB_URL\": \"https://www.linkedin.com/jobs-guest/jobs/api/jobPosting/{}\", \"NUM_JOBS_PER_QUERY\": {{ $json.data.NUM_JOBS_PER_QUERY }}, \"SEARCH_QUERIES\": [ { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[0].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[0].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[0].f_E }}\" }, { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[1].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[1].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[1].f_E }}\" }, { \"keywords\": \"{{ $json.data.SEARCH_QUERIES[2].keywords }}\", \"location\": \"{{ $json.data.SEARCH_QUERIES[2].location }}\", \"f_E\": \"{{ $json.data.SEARCH_QUERIES[2].f_E }}\" } ], \"REQUEST_TIMEOUT\": {{ $json.data.REQUEST_TIMEOUT }}, \"PAGE_DELAY\": {{ $json.data.PAGE_DELAY }}, \"CSV_FILENAME\": \"{{ $json.data.CSV_FILENAME }}\", \"INITIAL_HEADERS_COUNT\": {{ $json.data.INITIAL_HEADERS_COUNT }}, \"RANDOM_HEADERS_COUNT\": {{ $json.data.RANDOM_HEADERS_COUNT }}, \"MAX_ATTEMPTS\": {{ $json.data.MAX_ATTEMPTS }}, \"RETRY_WAIT_429\": {{ $json.data.RETRY_WAIT_429 }}, \"RETRY_WAIT_NON_429\": {{ $json.data.RETRY_WAIT_NON_429 }}, \"OUTPUT_FIELDS\": [ \"{{ $json.data.OUTPUT_FIELDS[0] }}\", \"{{ $json.data.OUTPUT_FIELDS[1] }}\", \"{{ $json.data.OUTPUT_FIELDS[2] }}\", \"{{ $json.data.OUTPUT_FIELDS[3] }}\", \"{{ $json.data.OUTPUT_FIELDS[4] }}\", \"{{ $json.data.OUTPUT_FIELDS[5] }}\", \"{{ $json.data.OUTPUT_FIELDS[6] }}\", \"{{ $json.data.OUTPUT_FIELDS[7] }}\", \"{{ $json.data.OUTPUT_FIELDS[8] }}\" ] }' > config.json && cat config.json\n"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        320,
        740
      ],
      "id": "fbf0a05e-79f7-406b-97ed-6c49ab8577f5",
      "name": "Generate Config File"
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        320,
        320
      ],
      "id": "01dcb463-ce7c-48b1-85a0-7625d2ec6062",
      "name": "Parse Config File"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 12
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        300,
        -100
      ],
      "id": "0e498317-26bb-4f17-b7e8-311a0bc85432",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        1240,
        740
      ],
      "id": "2e493b76-1058-4439-81aa-a5fde4a5726c",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        1680,
        -100
      ],
      "id": "2f2c7219-b286-410a-be44-5bfadda27716",
      "name": "Remove Duplicates1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "deepseek-chat",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=Role:\nYou are a recruitment specialist matching candidate profiles with job postings.\n\nCandidate:\nFirst-year Master's student in Electronics and Telecommunications Engineering seeking an internship (no full/part-time jobs) in Belgium. Limited direct experience; has worked at McDonald's, FedEx, and tutors math/physics. Skills include basic electronics, circuit analysis, PCB design, VHDL, FPGAs, simulation tools; programming in Python, C, C++, MATLAB (Simulink); strong communication, teamwork, problem-solving, and time management. Languages: French (Native), English (Proficient), Dutch (Basic).\n\nInstructions:\nAnalyze the job posting details and generate a \"Job Match Percentage\" (0-100) reflecting the fit with this candidate. If \"N/A\" appears for experience, treat it as unknown. If any critical info is missing, return:\n{\n  \"job_match_percentage\": \"\",\n  \"explanation\": \"\"\n}\nOtherwise, return a JSON object with:\n- \"job_match_percentage\": integer (0-100)\n- \"explanation\": one-sentence explanation.\n\nJob Posting Input:\nCompany Name:         {{ $json.company_name }}\nJob Title:            {{ $json.job_title }}\nTime Posted:          {{ $json.time_posted }}\nNumber of Applicants: {{ $json.num_applicants }}\nJob Description:      {{ $json.description_content }}\nExperience Needed:    {{ $json.experience_needed }}\n\nExample Good Output:\n{\n  \"job_match_percentage\": 20,\n  \"explanation\": \"Job targets Management/Business, not matching candidate's technical focus; transferable skills add some value.\"\n}\n\nExample Bad Output:\nJob Match: 80\nThis role is perfect because it's in Belgium and the candidate has some work experience. The candidate should apply immediately.\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "maxTokens": 2040
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        600,
        960
      ],
      "id": "aa5eaf53-f6ec-4fc2-86c4-cc6c55b68690",
      "name": "OpenAI",
      "alwaysOutputData": false,
      "credentials": {
        "openAiApi": {
          "id": "p3IzBlmoDBA5IIDS",
          "name": "OpenAi account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "=deepseek-chat",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "=Hi"
            }
          ]
        },
        "options": {
          "maxTokens": 2048
        }
      },
      "id": "36e55985-0d83-40f7-84c4-5840934e20e6",
      "name": "Generate article with DeepSeek1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        340,
        980
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "p3IzBlmoDBA5IIDS",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            },
            {
              "field1": "property_time_posted",
              "field2": "time_posted"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        580,
        1120
      ],
      "id": "6e274d17-7909-4a66-9064-387d3ea6627c",
      "name": "Merge Job Data1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.job_id }}",
                    "rightValue": "={{ $json.property_job_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        900,
        1100
      ],
      "id": "48f0d9a8-2122-458e-b36c-d0cf67ef4cc5",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        1160,
        1080
      ],
      "id": "6fa6250f-23cf-4d5d-a052-d4552de6b9b6",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Job Id|number",
              "numberValue": "={{ $json.job_id }}"
            },
            {
              "key": "Job Link|url",
              "urlValue": "={{ $json.job_url }}"
            },
            {
              "key": "Company|rich_text",
              "textContent": "={{ $json.company_name }}"
            },
            {
              "key": "Job Title|title",
              "title": "={{ $json.job_title }}"
            },
            {
              "key": "Time Posted|rich_text",
              "textContent": "={{ $json.time_posted }}"
            },
            {
              "key": "Number Of Applicants|rich_text",
              "textContent": "={{ $json.num_applicants }}"
            },
            {
              "key": "Location|rich_text",
              "textContent": "={{ $json.job_location }}"
            },
            {
              "key": "=Experience Needed|rich_text",
              "textContent": "={{ $json.experience_needed }}"
            },
            {
              "key": "Job Description|rich_text",
              "textContent": "={{ $json.description_content.length > 1997 ? $json.description_content.substring(0, 1997) + '...' : $json.description_content }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1440,
        340
      ],
      "id": "5a41b894-2634-47db-81a7-8bd731bade7b",
      "name": "Notion: Create Job Entry",
      "credentials": {
        "notionApi": {
          "id": "i2VF7jTgl2AkAKzI",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            },
            {
              "field1": "property_time_posted",
              "field2": "time_posted"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1740,
        720
      ],
      "id": "7467384a-77c7-4467-99df-af1d836d5b78",
      "name": "Data To Update"
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "property_job_id",
              "field2": "job_id"
            },
            {
              "field1": "property_job_link",
              "field2": "job_url"
            },
            {
              "field1": "property_job_match",
              "field2": "job_match"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1240,
        340
      ],
      "id": "6e09878d-7bfc-4f9c-9e8f-52c8a2d7a126",
      "name": "Data To Create"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Time Posted|rich_text",
              "textContent": "={{ $('Data To Update').item.json.time_posted }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        2160,
        720
      ],
      "id": "3015c10c-6696-4004-83b8-352ecc3781f7",
      "name": "Notion1",
      "credentials": {
        "notionApi": {
          "id": "i2VF7jTgl2AkAKzI",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1904bf6b-83b3-80a9-99c0-d92afa4a31e1",
          "mode": "list",
          "cachedResultName": "Internship Search",
          "cachedResultUrl": "https://www.notion.so/1904bf6b83b380a999c0d92afa4a31e1"
        },
        "returnAll": true,
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "key": "Job Id|number",
              "condition": "equals",
              "numberValue": "={{ $json.job_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        1940,
        720
      ],
      "id": "cbff3e1c-b065-4a3e-8d7d-ee49c9e6d248",
      "name": "Notion",
      "credentials": {
        "notionApi": {
          "id": "i2VF7jTgl2AkAKzI",
          "name": "Notion account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Run Scraper Script": {
      "main": [
        [
          {
            "node": "Load Job Listings CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Job Listings CSV": {
      "main": [
        [
          {
            "node": "Parse CSV Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse CSV Data": {
      "main": [
        [
          {
            "node": "Transform Job Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Job Data": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion: Fetch Existing Jobs": {
      "main": [
        [
          {
            "node": "Remove Duplicates1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Config File": {
      "main": [
        [
          {
            "node": "Parse Config File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Config Parameters": {
      "main": [
        [
          {
            "node": "Generate Config File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Config File": {
      "main": [
        [
          {
            "node": "Run Scraper Script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Config File": {
      "main": [
        [
          {
            "node": "Set Config Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Load Config File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notion: Fetch Existing Jobs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Data To Update",
            "type": "main",
            "index": 1
          },
          {
            "node": "Data To Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Remove Duplicates1": {
      "main": [
        [
          {
            "node": "Data To Update",
            "type": "main",
            "index": 0
          },
          {
            "node": "Data To Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        []
      ]
    },
    "Merge Job Data1": {
      "main": [
        []
      ]
    },
    "Execution Data": {
      "main": [
        []
      ]
    },
    "Data To Update": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion1": {
      "main": [
        []
      ]
    },
    "Data To Create": {
      "main": [
        [
          {
            "node": "Notion: Create Job Entry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Notion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "be7e5256-b663-44c7-a69d-e81498034a05",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "238d409f3ebff0e69a013366ecb830ef0fb1802af1fc88319da90f11fba572a1"
  },
  "id": "hHrooKM5caps3Ky5",
  "tags": []
}